using System;
using System.Text;
using Org.BouncyCastle.Pqc.Crypto.Crystals.Dilithium;
using Org.BouncyCastle.Utilities.Encoders;

class Program
{
    public static void Main()
    {
        string message =
            "I'm writing a piece on your company. Please contact me at krebsonsecurity@gmail.com to make a statement. ~Brian";
        string base64Signature =
            "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 GyQr";
        string base64EncodedPublicKey =
            "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 Wi8Vx+T2rpKslYSA1/dACL6g=";
        VerifyDilithium(message, base64Signature, base64EncodedPublicKey);
        
    }

    static void VerifyDilithium(string message, string base64Signature, string base64EncodedPublicKey)
    {

        // Convert ASCII base64-encoded string message to the right hex format
        var data = Hex.Encode(Encoding.ASCII.GetBytes(message));

        // Import the key
        DilithiumPublicKeyParameters pubKey = new DilithiumPublicKeyParameters(DilithiumParameters.Dilithium3,
            Convert.FromBase64String(base64EncodedPublicKey));

        // convert the base64-encoded signature to a byte array needed by the algorithm
        byte[] signatureBytes = Convert.FromBase64String(base64Signature);

        // Create the Dilithium signer object
        var bob = new DilithiumSigner();

        // Initialize the dilithium signer object with the public key and specify that we are verifying
        bob.Init(false, pubKey);

        // check if it verifies
        if (bob.VerifySignature(data, signatureBytes)) Console.WriteLine("Dilithium signature verified");
        else Console.WriteLine("Dilithium signature failed");
    }
}
